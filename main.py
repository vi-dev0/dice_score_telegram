import telebot, time, json, config



bot = telebot.TeleBot(config.token)
score = {}

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç —Å–¥–µ–ª–∞–Ω–Ω—ã–π –∫–æ–º–∞–Ω–¥–æ–π @b4dcat404\n'
                                      '–Ø —É–º–µ—é —Å—á–∏—Ç–∞—Ç—å –æ—á–∫–∏ –≤ –±–∞—Å–∫–µ—Ç–±–æ–ª–µ, —Ñ—É—Ç–±–æ–ª–µ, –±–æ—É–ª–∏–Ω–≥–µ –∏ –¥–∞—Ä—Ç—Å–µ\n'
                                      '–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∏ –Ω–∞–∑–Ω–∞—á—å –∞–¥–º–∏–Ω–æ–º\n'
                                      '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –Ω–∞–ø–∏—à–∏ /help')
@bot.message_handler(commands=['info'])
def info(message):
    bot.send_message(message.chat.id, "*Powered by\:*\n\n"
                                      "@B4DCAT404 \- üá∑üá∫ telegram chanel for developers, students and freelancers\n\n"
                                      "View source code on [GitHub](https://github.com/vi-dev0/dice_score_telegram), "
                                      "feel free to contribute\n", parse_mode="MarkdownV2")
@bot.message_handler(commands=['stb','stf', 'std', 'stbou'])
def test(message):
    pscore = score[message.from_user.id]
    if pscore.get('b_sshots') != 0:
        pscorepersent = 100 / (pscore.get('b_shots') / pscore.get('b_sshots'))
    else:
        pscorepersent = 0
    if pscore.get('f_sshots') != 0:
        pfscore = 100 / pscore.get('f_shots') / pscore.get('f_sshots')
    else:
        pfscore = 0
    if pscore.get('bou_sshots') != 0:
        pbouscore = 100 / pscore.get('bou_shots') / pscore.get('bou_sshots')
    else:
        pbouscore = 0
    if pscore.get('d_sshots') != 0:
        pdscore = 100 / pscore.get('d_shots') / pscore.get('d_sshots')
    else:
        pdscore = 0

    if (message.text == '/stb' or message.text == '/stb@basket404_bot'):
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' + ' —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Å—á–µ—Ç:\n\n' +
                         '*–ë–ê–°–ö–¢–ï–ë–û–õ*üèÄ\n' +
                         '–ë—Ä–æ—Å–∫–∏: ' + str(pscore.get('b_shots')) + '\n–ü–æ–ø–∞–¥–∞–Ω–∏—è: '
                         + str(pscore.get('b_sshots')) + '\n–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏—è: ' + str(int(pscorepersent)) +
                         '%\n\n*[@B4DCAT404](https://t.me/b4dcat404)*',
                         parse_mode="MarkdownV2", disable_web_page_preview=True)
    elif (message.text == '/stf' or message.text == '/stf@basket404_bot'):
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' + ' —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Å—á–µ—Ç:\n\n' +
                                      '*–§–£–¢–ë–û–õ*‚öΩ\n' +
                                      '–£–¥–∞—Ä—ã: ' + str(pscore.get('f_shots')) + '\n–ì–æ–ª—ã: '
                                      + str(pscore.get('f_sshots')) + '\n–ü—Ä–æ—Ü–µ–Ω—Ç –≥–æ–ª–æ–≤: ' + str(int(pfscore)) +
                                     '%\n\n*[@B4DCAT404](https://t.me/b4dcat404)*',
                                     parse_mode="MarkdownV2", disable_web_page_preview=True)
    elif (message.text == '/stbou' or message.text == '/stbou@basket404_bot'):
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' + ' —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Å—á–µ—Ç:\n\n' +
                                    '*–ë–û–£–õ–ò–ù–ì*üé≥\n' +
                                     '–ë—Ä–æ—Å–∫–∏: ' + str(pscore.get('bou_shots')) + '\n–°—Ç—Ä–∞–π–∫–∏: '
                                     + str(pscore.get('bou_sshots')) + '\n–ü—Ä–æ—Ü–µ–Ω—Ç —Å—Ç—Ä–∞–π–∫–æ–≤: ' + str(int(pbouscore)) +
                                     '%\n\n*[@B4DCAT404](https://t.me/b4dcat404)*',
                                     parse_mode="MarkdownV2", disable_web_page_preview=True)
    elif (message.text == '/std' or message.text == '/std@basket404_bot'):
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' + ' —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Å—á–µ—Ç:\n\n' +
                         '\n\n*–î–ê–†–¢–°*üéØ\n' +
                                     '–ë—Ä–æ—Å–∫–∏: ' + str(pscore.get('d_shots')) + '\n–í —è–±–ª–æ—á–∫–æ: '
                                     + str(pscore.get('d_sshots')) + '\n–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–π: ' + str(int(pdscore)) +
                                      '%\n\n*[@B4DCAT404](https://t.me/b4dcat404)*',
                                        parse_mode="MarkdownV2", disable_web_page_preview=True)

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, '*–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*\n'
                                      '–ß—Ç–æ –±—ã –±–æ—Ç –Ω–∞—á–∞–ª –≤–µ—Å—Ç–∏ —Å—á–µ—Ç, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–∏–Ω –∏–∑ —ç–º–æ–¥–∂–∏:\n'
                                      'üèÄ \- –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—á–µ—Ç `/stb` \| —Å–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç `/rsb`\n'
                                      '‚öΩ \- –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—á–µ—Ç `/stf` \| —Å–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç `/rsf`\n'
                                      'üéØ \- –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—á–µ—Ç `/std` \| —Å–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç `/rsd`\n'
                                      'üé≥ \- –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—á–µ—Ç `/stbou` \| —Å–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç `/rsbou`\n\n'
                                      '*[@B4DCAT404](https://t.me/b4dcat404)*',
                     parse_mode="MarkdownV2", disable_web_page_preview=True)
# In progress
@bot.message_handler(commands=['score'])
def scores(message):
    usrid = message.from_user.id
    jscore = json.dumps(score, indent=4, sort_keys=True)
    print("–°—á–µ—Ç\n " + jscore)
    for key, value in score.items():
        print(key)
        user = key
        for v in value.items():
            print(v[1])


    #bot.send_message(message.chat.id, '–û–±—â–∏–π —Å—á—ë—Ç:\n' + jscore)



@bot.message_handler(func=lambda message: True, content_types=['dice'])
def handle_sticker(msg):
    dice = msg.dice.value
    if msg.dice.emoji == 'üèÄ':
        if msg.from_user.id not in score:
            score[msg.from_user.id] = {"b_shots": 0, "b_sshots": 0, "f_shots": 0, "f_sshots": 0, "bou_shots": 0, "bou_sshots": 0, "d_shots": 0, "d_sshots": 0}
        else:
            score[msg.from_user.id]["b_shots"] += 1
            if dice > 3:
                score[msg.from_user.id]["b_sshots"] += 1
    elif msg.dice.emoji == '‚öΩ':
        if msg.from_user.id not in score:
            score[msg.from_user.id] = {"b_shots": 0, "b_sshots": 0, "f_shots": 0, "f_sshots": 0, "bou_shots": 0, "bou_sshots": 0, "d_shots": 0, "d_sshots": 0}
        else:
            score[msg.from_user.id]["f_shots"] += 1
            if dice > 3:
                score[msg.from_user.id]["f_sshots"] += 1
    elif msg.dice.emoji == 'üé≥':
        if msg.from_user.id not in score:
            score[msg.from_user.id] = {"b_shots": 0, "b_sshots": 0, "f_shots": 0, "f_sshots": 0, "bou_shots": 0, "bou_sshots": 0, "d_shots": 0, "d_sshots": 0}
        else:
            score[msg.from_user.id]["bou_shots"] += 1
            if dice == 6:
                score[msg.from_user.id]["bou_sshots"] += 1
    elif msg.dice.emoji == 'üéØ':
        if msg.from_user.id not in score:
            score[msg.from_user.id] = {"b_shots": 0, "b_sshots": 0, "f_shots": 0, "f_sshots": 0, "bou_shots": 0, "bou_sshots": 0, "d_shots": 0, "d_sshots": 0}
        else:
            score[msg.from_user.id]["d_shots"] += 1
            if dice == 6:
                score[msg.from_user.id]["d_sshots"] += 1



@bot.message_handler(commands=['rsb', 'rsf', 'rsd', 'rsbou'])
def reset(message):
    tscore = score[message.from_user.id]
    if (message.text == '/rsb' or message.text == '/rsb@basket404_bot'):
        tscore['b_shots'] = 0
        tscore['b_sshots'] = 0
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' +
                     ' —Ç–≤–æ–π —Å—á–µ—Ç –æ–±–Ω—É–ª–µ–Ω\.\n', parse_mode="MarkdownV2")
    elif (message.text == '/rsf' or message.text == '/rsf@basket404_bot'):
        tscore['f_shots'] = 0
        tscore['f_sshots'] = 0
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' +
                         ' —Ç–≤–æ–π —Å—á–µ—Ç –æ–±–Ω—É–ª–µ–Ω\.\n', parse_mode="MarkdownV2")
    elif (message.text == '/rsd' or message.text == '/rsd@basket404_bot'):
        tscore['d_shots'] = 0
        tscore['d_sshots'] = 0
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' +
                         ' —Ç–≤–æ–π —Å—á–µ—Ç –æ–±–Ω—É–ª–µ–Ω\.\n', parse_mode="MarkdownV2")
    elif (message.text == '/rsbou' or message.text == '/rsbou@basket404_bot'):
        tscore['bou_shots'] = 0
        tscore['bou_sshots'] = 0
        bot.send_message(message.chat.id, '*' + message.from_user.first_name + '*' +
                         ' —Ç–≤–æ–π —Å—á–µ—Ç –æ–±–Ω—É–ª–µ–Ω\.\n', parse_mode="MarkdownV2")


if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True, interval=0)
        except Exception as e:
            print('–û—à–∏–±–∫–∞:')
            print(e)
            time.sleep(5)
            continue
